services:
  webapp:
    build:
      context: ..
      dockerfile: Dockerfile
      target: development
    image: webapp-django:dev
    container_name: ${WEBAPP_HOST}
    restart: unless-stopped
    environment:
      - DEBUG=${WEBAPP_DEBUG}
      - SECRET_KEY=${WEBAPP_SECRET_KEY}
      - ALLOWED_HOSTS=${WEBAPP_ALLOWED_HOSTS}
      - DB_HOST=${WEBAPP_DB_HOST}
      - DB_PORT=${WEBAPP_DB_PORT}
      - DB_NAME=${WEBAPP_DB_NAME}
      - DB_USER=${WEBAPP_DB_USER}
      - DB_PASSWORD=${WEBAPP_DB_PASS}
    ports:
      - ${WEBAPP_PORT}:${WEBAPP_PORT}
    volumes:
      - ..:/app/:delegated
    depends_on:
      webapp-db:
        condition: service_healthy
    networks:
      - webapp-network

  webapp-db:
    image: postgres:latest
    container_name: ${WEBAPP_DB_HOST}
    restart: unless-stopped
    volumes:
      - webapp-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${WEBAPP_DB_USER}
      POSTGRES_PASSWORD: ${WEBAPP_DB_PASS}
      POSTGRES_DB: ${WEBAPP_DB_NAME}
    ports:
      - ${WEBAPP_DB_PORT}:${WEBAPP_DB_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${WEBAPP_DB_USER}", "-d", "${WEBAPP_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webapp-network

networks:
  webapp-network:
    driver: bridge

volumes:
  webapp-db-data: